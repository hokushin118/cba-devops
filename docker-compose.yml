# This is the base Docker Compose file containing .infrastructure services.
# Project name
name: cba

services:
  # PostgreSQL object-relational database system is used as Account data storage.
  postgres:
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    networks:
      - ${BACKEND_NETWORK}
    healthcheck: # Healthcheck for better container management
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging: # Common logging config
      driver: json-file
      options:
        max-size: 10m
        max-file: 5

  # Prometheus (metrics database) - http://<host-ip>:19090
  # Example: http://localhost:19090/targets
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    hostname: ${PROMETHEUS_HOSTNAME}
    restart: on-failure
    volumes: # prometheus configuration file
      - ./.infrastructure/metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/data # creating a volume to save Prometheus data locally
    networks:
      - ${BACKEND_NETWORK}
    healthcheck:
      test: [ 'CMD-SHELL', 'wget --spider http://${PROMETHEUS_HOSTNAME}:${PROMETHEUS_PORT}/-/healthy || exit 1' ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging: # Common logging config
      driver: json-file
      options:
        max-size: 10m
        max-file: 5

  # PostgreSQL object-relational database system is used as Keycloak data storage.
  keycloak-postgres:
    hostname: keycloak
    image: bitnami/postgresql:${KEYCLOAK_POSTGRES_VERSION}
    restart: on-failure
    volumes:
      - keycloak-postgresql-data:/bitnami/postgresql  # creating a volume to save PostgreSQL data locally
    networks:
      - ${BACKEND_NETWORK}
    logging: # Common logging config
      driver: json-file
      options:
        max-size: 10m
        max-file: 5

  # Keycloak IAM (Identity and Access Management) service.
  keycloak:
    hostname: keycloak
    restart: on-failure
    depends_on:
      - keycloak-postgres
    networks:
      - ${BACKEND_NETWORK}
    logging: # Common logging config
      driver: json-file
      options:
        max-size: 10m
        max-file: 5

  # Redis is a high performance key-value database. It shores cached values.
  redis:
    image: bitnami/redis:${REDIS_VERSION}
    hostname: ${REDIS_HOSTNAME}
    restart: on-failure
    command: redis-server --save 20 1 --loglevel warning --protected-mode no --stop-writes-on-bgsave-error no
    volumes:
      - cache-data:/bitnami/redis/data # creating a volume to save Redis data locally
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1
    logging: # Common logging config
      driver: json-file
      options:
        max-size: 10m
        max-file: 5

volumes:
  keycloak-postgresql-data:
    driver: local
  prometheus_data:
    driver: local
  cache-data:
    driver: local

# networks
networks:
  cba_net:
    name: ${BACKEND_NETWORK}
